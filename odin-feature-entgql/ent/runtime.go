// Code generated by entc, DO NOT EDIT.

package ent

import (
	"odin/ent/artist"
	"odin/ent/partnership"
	"odin/ent/schema"
	"odin/ent/store"
	"odin/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	artistFields := schema.Artist{}.Fields()
	_ = artistFields
	// artistDescName is the schema descriptor for name field.
	artistDescName := artistFields[0].Descriptor()
	// artist.NameValidator is a validator for the "name" field. It is called by the builders before save.
	artist.NameValidator = artistDescName.Validators[0].(func(string) error)
	// artistDescExternalURL is the schema descriptor for external_url field.
	artistDescExternalURL := artistFields[1].Descriptor()
	// artist.ExternalURLValidator is a validator for the "external_url" field. It is called by the builders before save.
	artist.ExternalURLValidator = artistDescExternalURL.Validators[0].(func(string) error)
	// artistDescPhoneNumber is the schema descriptor for phone_number field.
	artistDescPhoneNumber := artistFields[2].Descriptor()
	// artist.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	artist.PhoneNumberValidator = artistDescPhoneNumber.Validators[0].(func(string) error)
	// artistDescCreatedAt is the schema descriptor for created_at field.
	artistDescCreatedAt := artistFields[5].Descriptor()
	// artist.DefaultCreatedAt holds the default value on creation for the created_at field.
	artist.DefaultCreatedAt = artistDescCreatedAt.Default.(func() time.Time)
	partnershipFields := schema.Partnership{}.Fields()
	_ = partnershipFields
	// partnershipDescName is the schema descriptor for name field.
	partnershipDescName := partnershipFields[0].Descriptor()
	// partnership.NameValidator is a validator for the "name" field. It is called by the builders before save.
	partnership.NameValidator = partnershipDescName.Validators[0].(func(string) error)
	// partnershipDescCompany is the schema descriptor for company field.
	partnershipDescCompany := partnershipFields[1].Descriptor()
	// partnership.CompanyValidator is a validator for the "company" field. It is called by the builders before save.
	partnership.CompanyValidator = partnershipDescCompany.Validators[0].(func(string) error)
	// partnershipDescEmail is the schema descriptor for email field.
	partnershipDescEmail := partnershipFields[2].Descriptor()
	// partnership.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	partnership.EmailValidator = partnershipDescEmail.Validators[0].(func(string) error)
	// partnershipDescContent is the schema descriptor for content field.
	partnershipDescContent := partnershipFields[3].Descriptor()
	// partnership.DefaultContent holds the default value on creation for the content field.
	partnership.DefaultContent = partnershipDescContent.Default.(string)
	// partnershipDescCreatedAt is the schema descriptor for created_at field.
	partnershipDescCreatedAt := partnershipFields[4].Descriptor()
	// partnership.DefaultCreatedAt holds the default value on creation for the created_at field.
	partnership.DefaultCreatedAt = partnershipDescCreatedAt.Default.(func() time.Time)
	storeFields := schema.Store{}.Fields()
	_ = storeFields
	// storeDescName is the schema descriptor for name field.
	storeDescName := storeFields[0].Descriptor()
	// store.NameValidator is a validator for the "name" field. It is called by the builders before save.
	store.NameValidator = storeDescName.Validators[0].(func(string) error)
	// storeDescLocation is the schema descriptor for location field.
	storeDescLocation := storeFields[1].Descriptor()
	// store.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	store.LocationValidator = storeDescLocation.Validators[0].(func(string) error)
	// storeDescCreatedAt is the schema descriptor for created_at field.
	storeDescCreatedAt := storeFields[5].Descriptor()
	// store.DefaultCreatedAt holds the default value on creation for the created_at field.
	store.DefaultCreatedAt = storeDescCreatedAt.Default.(func() time.Time)
	// storeDescUpdatedAt is the schema descriptor for updated_at field.
	storeDescUpdatedAt := storeFields[6].Descriptor()
	// store.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	store.DefaultUpdatedAt = storeDescUpdatedAt.Default.(func() time.Time)
	// store.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	store.UpdateDefaultUpdatedAt = storeDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
